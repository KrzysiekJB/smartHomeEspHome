  - platform: time_based
    name: Roleta salon taras
    id: cover_salon_taras
    open_action:
      - switch.turn_on: relay_salon_taras_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_salon_taras_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_salon_taras_up
      - switch.turn_off: relay_salon_taras_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_salon_taras).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 0;
          ESP_LOGD("cover_save", "Roleta salon taras zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta salon FIX
    id: cover_salon_FIX
    open_action:
      - switch.turn_on: relay_salon_FIX_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_salon_FIX_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_salon_FIX_up
      - switch.turn_off: relay_salon_FIX_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_salon_FIX).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 1;
          ESP_LOGD("cover_save", "Roleta salon FIX zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta salon od sąsiada
    id: cover_salon_od_sasiada
    open_action:
      - switch.turn_on: relay_salon_od_sasiada_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_salon_od_sasiada_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_salon_od_sasiada_up
      - switch.turn_off: relay_salon_od_sasiada_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_salon_od_sasiada).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 2;
          ESP_LOGD("cover_save", "Roleta salon od sąsiada zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta jadalnia
    id: cover_jadalnia
    open_action:
      - switch.turn_on: relay_jadalnia_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_jadalnia_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_jadalnia_up
      - switch.turn_off: relay_jadalnia_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_jadalnia).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 3;
          ESP_LOGD("cover_save", "Roleta jadalnia zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta kuchnia wyjście na taras
    id: cover_kuchnia_wyjscie_na_taras
    open_action:
      - switch.turn_on: relay_kuchnia_wyjscie_na_taras_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_kuchnia_wyjscie_na_taras_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_kuchnia_wyjscie_na_taras_up
      - switch.turn_off: relay_kuchnia_wyjscie_na_taras_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_kuchnia_wyjscie_na_taras).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 4;
          ESP_LOGD("cover_save", "Roleta kuchnia wyjście na taras zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta kuchnia okno
    id: cover_kuchnia_okno
    open_action:
      - switch.turn_on: relay_kuchnia_okno_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_kuchnia_okno_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_kuchnia_okno_up
      - switch.turn_off: relay_kuchnia_okno_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_kuchnia_okno).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 5;
          ESP_LOGD("cover_save", "Roleta kuchnia okno zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta gabinet parter okno lewe
    id: cover_gabinet_parter_okno_lewe
    open_action:
      - switch.turn_on: relay_gabinet_parter_okno_lewe_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_gabinet_parter_okno_lewe_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_gabinet_parter_okno_lewe_up
      - switch.turn_off: relay_gabinet_parter_okno_lewe_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_gabinet_parter_okno_lewe).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 6;
          ESP_LOGD("cover_save", "Roleta gabinet parter okno lewe zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta gabinet parter okno prawe
    id: cover_gabinet_parter_okno_prawe
    open_action:
      - switch.turn_on: relay_gabinet_parter_okno_prawe_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_gabinet_parter_okno_prawe_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_gabinet_parter_okno_prawe_up
      - switch.turn_off: relay_gabinet_parter_okno_prawe_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_gabinet_parter_okno_prawe).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 7;
          ESP_LOGD("cover_save", "Roleta gabinet parter okno prawe zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta garaż
    id: cover_garaz
    open_action:
      - switch.turn_on: relay_garaz_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_garaz_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_garaz_up
      - switch.turn_off: relay_garaz_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_garaz).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 8;
          ESP_LOGD("cover_save", "Roleta garaż zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta pokój od sąsiada
    id: cover_pokoj_od_sasiada
    open_action:
      - switch.turn_on: relay_pokoj_od_sasiada_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_pokoj_od_sasiada_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_pokoj_od_sasiada_up
      - switch.turn_off: relay_pokoj_od_sasiada_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_pokoj_od_sasiada).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 9;
          ESP_LOGD("cover_save", "Roleta pokój od sąsiada zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta kacperek okno lewe
    id: cover_kacperek_okno_lewe
    open_action:
      - switch.turn_on: relay_kacperek_okno_lewe_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_kacperek_okno_lewe_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_kacperek_okno_lewe_up
      - switch.turn_off: relay_kacperek_okno_lewe_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_kacperek_okno_lewe).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 10;
          ESP_LOGD("cover_save", "Roleta kacperek okno lewe zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta kacperek okno prawe
    id: cover_kacperek_okno_prawe
    open_action:
      - switch.turn_on: relay_kacperek_okno_prawe_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_kacperek_okno_prawe_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_kacperek_okno_prawe_up
      - switch.turn_off: relay_kacperek_okno_prawe_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_kacperek_okno_prawe).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 11;
          ESP_LOGD("cover_save", "Roleta kacperek okno prawe zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta sypialnia prawa
    id: cover_sypialnia_prawa
    open_action:
      - switch.turn_on: relay_sypialnia_prawa_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_sypialnia_prawa_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_sypialnia_prawa_up
      - switch.turn_off: relay_sypialnia_prawa_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_sypialnia_prawa).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 12;
          ESP_LOGD("cover_save", "Roleta sypialnia prawa zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta sypialnia lewa
    id: cover_sypialnia_lewa
    open_action:
      - switch.turn_on: relay_sypialnia_lewa_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_sypialnia_lewa_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_sypialnia_lewa_up
      - switch.turn_off: relay_sypialnia_lewa_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_sypialnia_lewa).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 13;
          ESP_LOGD("cover_save", "Roleta sypialnia lewa zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta garderoba sypialnia
    id: cover_garderoba_sypialnia
    open_action:
      - switch.turn_on: relay_garderoba_sypialnia_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_garderoba_sypialnia_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_garderoba_sypialnia_up
      - switch.turn_off: relay_garderoba_sypialnia_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_garderoba_sypialnia).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 14;
          ESP_LOGD("cover_save", "Roleta garderoba sypialnia zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
  - platform: time_based
    name: Roleta korytarz
    id: cover_korytarz
    open_action:
      - switch.turn_on: relay_korytarz_up
    open_duration: 10s
    close_action:
      - switch.turn_on: relay_korytarz_down
    close_duration: 9s
    stop_action:
      - switch.turn_off: relay_korytarz_up
      - switch.turn_off: relay_korytarz_down
      - lambda: |-
          // Pobierz pozycję jako float (0.0 - 1.0)
          float current_pos_float = id(cover_korytarz).position;
          // Przekonwertuj na procent (0-100) i zaokrąglij do najbliższej liczby całkowitej
          uint8_t current_pos_int = (uint8_t)round(current_pos_float * 100.0);
          // Upewnij się, że wartość jest w zakresie 0-100
          if (current_pos_int > 100) { current_pos_int = 100; }

          uint16_t save_address = 15;
          ESP_LOGD("cover_save", "Roleta korytarz zatrzymana. Pozycja: %.2f (int: %u). Zapis do EEPROM (addr %u)...", current_pos_float, current_pos_int, save_address);

          // Zapisz pojedynczy bajt (uint8_t) do EEPROM
          if (id(eeprom_storage).write_byte(save_address, current_pos_int)) {
            ESP_LOGD("cover_save", "Zapisano pozycję (int %u) do EEPROM pod adresem %u.", current_pos_int, save_address);
          } else {
            ESP_LOGE("cover_save", "Błąd zapisu pozycji (int %u) do EEPROM pod adresem %u!", current_pos_int, save_address);
          }
    assumed_state: false
